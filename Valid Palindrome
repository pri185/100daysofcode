A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.

 class Solution {
public:
    //to check what characters are allowed in the palindrome string 
    bool isValid(char ch)
    {
        if((ch>='a' && ch<='z')||(ch>='A' && ch<='Z')||(ch>='0' && ch<='9')){
            return 1;
        }
        else{
            return 0;
        }
    }
    
    //convert all characters to lower    
    char toLower(char ch)
    {
        if((ch>='a' && ch<='z')||(ch>='0' && ch<='9'))
        {
            return ch;
        }
        else{
            char temp=ch-'A'+'a';
            return temp;
        }
    }
     
    //to check if a string is palindrome or not 
    bool isPalindrome(string s) {
        string temp="";
        for (int i=0; i<s.length();i++)
        {
            if(isValid(s[i]))
            {
                temp.push_back(s[i]);
            }
        }
        
        for (int i=0; i<temp.length();i++)
        {
            temp[i]=toLower(temp[i]);
        }
        
        int start=0;
        int end=temp.length()-1;
        while(start<=end)
        {
            if(temp[start]!=temp[end])
            {
                return 0;
            }
            else{
                start++;
                end--;
                
            }
        }
        return 1;
        
        
    }
};
